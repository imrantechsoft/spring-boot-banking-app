Hello Professionals,

Happy Coding !!


Clone the repository with the below link

https://github.com/imrantechsoft

			(OR)

https://github.com/imrantechsoft/spring-boot-banking-app.git


Steps:
------

1) Clone/Checkout/download ZIP from the repository link given above.

2) Import projects in the Eclipse/STS/IntelliJ IDE

3) Update the maven projects for each Microservice to download dependencies.

4) Start the Spring Boot Apps in the given below sequential order. 

5) Hit the swagger UI for the Rest API Documentation. You can hit the rest end points from the swagger UI.



NOTE: Start the Spring Boot Apps in the following order given below.

	  The Config Server will fetch the Apps properties from github URI : https://github.com/imrantechsoft/spring-boot-banking-app


Banking Application
====================

The Banking app consists of 6 microservices.


a) Cloud Config Server

b) Eureka Discovery Server

c) Cloud API Gateway Server

d) Bank Profile

e) Bank Transaction

f) Bank Aggregator



1) BANKCONFIGSERVER

2) BANKEUREKASERVER

3) BANKAPIGATEWAYSERVER

4) BANKPROFILESERVICE

5) BANKTRANSACTIONSERVICE

6) BANKAGGREGATORSERVICE


Swagger UI:
------------


To access the Swagger UI hit the below URIs. The URIs are specific to each microservice.


BANKPROFILESERVICE:

http://localhost:8081/swagger-ui/index.html#/


BANKTRANSACTIONSERVICE:

http://localhost:8082/swagger-ui/index.html#/


BANKAGGREGATORSERVICE:

http://localhost:8083/swagger-ui/index.html#/



NOTE: After accessing the swagger UI hit the SEED DATA rest end points for the records. 




Hit the Rest end points with the below following order:
--------------------------------------------------------


NOTE: The Rest end points will route through API Gateway


1) http://localhost:8080/profile/banks/seedData

2) http://localhost:8080/profile/banks

3) http://localhost:8080/profile/customers/seedData

4) http://localhost:8080/profile/customers


5) http://localhost:8080/profile/banks/HDFC

RequestMethod: POST

{
    "name": "HDFC",
    "location": "Bangalore",
    "ifscCode": "HDFC0004456"
}



6) http://localhost:8080/profile/banks/HDFC

RequestMethod: GET

{
    "name": "HDFC",
    "location": "Bangalore",
    "ifscCode": "HDFC0004456"
}



7) http://localhost:8080/profile/banks/HDFC


RequestMethod: PUT

{
    "name": "HDFC",
    "location": "Bangalore",
    "ifscCode": "HDFC0004456"
}


8) http://localhost:8080/profile/banks/SBI/customers


RequestMethod: POST


{
        "customerName": "Imran",
        "emailId": "imran@gmail.com",
        "mobileNumber": "9312345679",
        "location": "Hyderabad"
}



9) http://localhost:8080/profile/banks/SBI/customers

RequestMethod: GET


{
    "customerList": [
        {
            "customerName": "Imran",
            "emailId": "imran@gmail.com",
            "mobileNumber": "9312345679",
            "location": "Hyderabad",
            "bank": {
                "name": "SBI",
                "location": "Hyderabad",
                "ifscCode": "SBI0001122"
            }
        }
    ]
}


10) http://localhost:8080/profile/customers/Imran


RequestMethod: GET


{
    "customerName": "Imran",
    "emailId": "imran@gmail.com",
    "mobileNumber": "9381654409",
    "location": "Hyderabad",
    "bank": {
        "name": "SBI",
        "location": "Hyderabad",
        "ifscCode": "SBI0001122"
    }
}


11) http://localhost:8080/profile/banks/HDFC/customers


RequestMethod: PUT


{
        "customerName": "Imran",
        "emailId": "imran@gmail.com",
        "mobileNumber": "9312345689",
        "location": "Hyderabad"
}



12) http://localhost:8080/profile/customers/John


RequestMethod: DELETE



13) http://localhost:8080/transaction/accountDetails/John


RequestMethod: GET


14) http://localhost:8080/transaction/accountDetails/Imran

RequestMethod: GET



15) http://localhost:8080/aggregator/banks/HDFC


RequestMethod: GET


